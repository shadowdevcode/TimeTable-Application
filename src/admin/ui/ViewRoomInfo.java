/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package admin.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import javax.swing.JDesktopPane;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.dao.RoomInfoDAO;
import model.to.RoomInfoTO;


/**
 *
 * @author vijay
 */
public class ViewRoomInfo extends javax.swing.JInternalFrame {

    ArrayList<RoomInfoTO> allRoomData;
    JPopupMenu jpopup;
    int row;
   
    public ViewRoomInfo() {
        initComponents();
        setSize(500, 500);
         row = -1;
         bindTableData();
         jpopup = new JPopupMenu();
         JMenuItem jmiUpdate = new JMenuItem("Update This Record");
           jpopup.add(jmiUpdate);
         JMenuItem jmiDelete = new JMenuItem("Delete This Record");
           jpopup.add(jmiDelete);
           
           jmiDelete.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                deleteRecord();
            }
        });
           jmiUpdate.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                updateRecord();
            }
        });
    }
    
    
    private void updateRecord(){
         if (row != -1) {
            RoomInfoTO cit = allRoomData.get(row);
            if (cit != null) {
                AddRoomInfo obj = new AddRoomInfo(cit);
                obj.setVisible(true);
                obj.setTitle("Update Room Info");
                JDesktopPane jdp = getDesktopPane();
                jdp.add(obj);
                try {
                    obj.setSelected(true);
                } catch (PropertyVetoException ex) {
                }
                dispose();
            }
        }
    }
    
    private void deleteRecord(){
        String message = "";
         if (row != -1) {
            RoomInfoTO cit = allRoomData.get(row);
            if (cit != null) {
                int result = JOptionPane.showConfirmDialog(this, "Are You Sure To Delete This Room Information?", "Message From Admin", JOptionPane.OK_CANCEL_OPTION);
                if (result == JOptionPane.OK_OPTION) {
                    RoomInfoDAO action = new RoomInfoDAO();
                    if (action.deleteRecord(cit.getRoomID())) {
                        JOptionPane.showMessageDialog(this, "Record is Deleted");
                        bindTableData();
                        row = -1;
                    } else {
                        JOptionPane.showMessageDialog(this, "HEY USER THIS RECORD WILL NOT BE DELETED UNLESS IT IS DELETED FROM THE TABLE OF ROOM ALLOCATION"
                                + " BECAUSE THE RECORD IS IN USE THERE...!");
                        //JOptionPane.showMessageDialog(this, action.getErrorMessage());
                    }
                }
            }
        }
    }
    
    private void bindTableData() {
           allRoomData = new RoomInfoDAO().getAllRecord();
          if (allRoomData != null && allRoomData.size() != 0) {
            int totalRows = allRoomData.size();
            String[] columnNames = {" Room ID ", " Room Name ", " No of Chair "};
            Object allData[][] = new Object[totalRows][columnNames.length];
            for (int i = 0; i < totalRows; i++) {
                RoomInfoTO cit = allRoomData.get(i);
                allData[i] = new Object[columnNames.length];
                allData[i][0] = cit.getRoomID();
                allData[i][1] = cit.getRoomName();
                allData[i][2] = cit.getNoofChair();
            }
            DefaultTableModel dtm = new DefaultTableModel(allData, columnNames);
            jtRoomInfo.setModel(dtm);
        }   
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtRoomInfo = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("View Room Info");

        jtRoomInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtRoomInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtRoomInfoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtRoomInfo);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtRoomInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtRoomInfoMouseClicked
         //if(evt.getButton()== MouseEvent.BUTTON3){
        if (SwingUtilities.isRightMouseButton(evt)) {
            //System.out.println(" Right Button is Clicked ");
            int idx = jtRoomInfo.rowAtPoint(evt.getPoint());
            jtRoomInfo.getSelectionModel().setSelectionInterval(idx, idx);
            row = jtRoomInfo.getSelectedRow();
            //System.out.println(row);
            jpopup.show(jtRoomInfo, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jtRoomInfoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtRoomInfo;
    // End of variables declaration//GEN-END:variables
}
