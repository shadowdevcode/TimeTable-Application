/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package admin.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import javax.swing.JDesktopPane;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.dao.SubjectInfoDAO;
import model.to.SubjectInfoTO;

/**
 *
 * @author vijay
 */
public class ViewSubjectInfo extends javax.swing.JInternalFrame {

    ArrayList<SubjectInfoTO> allSubjectData;
     JPopupMenu jpopup;
     int row;
            
    public ViewSubjectInfo() {
        initComponents();
         setSize(500, 500);
          row = -1;
          bindTableData();
          jpopup = new JPopupMenu();
           JMenuItem jmiUpdate = new JMenuItem("Update This Record");
            jpopup.add(jmiUpdate);
           JMenuItem jmiDelete = new JMenuItem("Delete This Record");
            jpopup.add(jmiDelete);
          
            jmiDelete.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
               deleteRecord(); 
            }
        });
             jmiUpdate.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
               UpdateRecord(); 
            }
        });
       }
    
          private void UpdateRecord(){
               if (row != -1) {
            SubjectInfoTO cit = allSubjectData.get(row);
            if (cit != null) {
                AddSubjectInfo obj = new AddSubjectInfo(cit);
                obj.setVisible(true);
                obj.setTitle("Update Subject Info");
                JDesktopPane jdp = getDesktopPane();
                jdp.add(obj);
                try {
                    obj.setSelected(true);
                } catch (PropertyVetoException ex) {
                }
                dispose();
            }
        }
          }
    
          private void deleteRecord(){
              String message = "";
               if (row != -1) {
            SubjectInfoTO cit = allSubjectData.get(row);
            if (cit != null) {
                int result = JOptionPane.showConfirmDialog(this, "Are You Sure To Delete This Subject Information?", "Message From Admin", JOptionPane.OK_CANCEL_OPTION);
                if (result == JOptionPane.OK_OPTION) {
                    SubjectInfoDAO action = new SubjectInfoDAO();
                    if (action.deleteRecord(cit.getSubjectID())) {
                        JOptionPane.showMessageDialog(this, "Record is Deleted");
                        bindTableData();
                        row = -1;
                    } else {
                        JOptionPane.showMessageDialog(this, "Hey User The Record will not be deleted unless it is deleted from the Faculty Subject as the record you are deleting is already in the use of the faculty so kindly first delete record from the faculty Subect view table...!"
                                + " Hope that this isn't a problem for you!");
                        //JOptionPane.showMessageDialog(this, action.geterrorMessage());
                    }
                }
            }
        }
          }
          private void bindTableData() {
          allSubjectData = new SubjectInfoDAO().getAllRecord();
          if (allSubjectData != null && allSubjectData.size() != 0) {
            int totalRows = allSubjectData.size();
            String[] columnNames = {" Subject ID ", " Description ", " Subject Name "};
            Object allData[][] = new Object[totalRows][columnNames.length];
            for (int i = 0; i < totalRows; i++) {
                SubjectInfoTO cit = allSubjectData.get(i);
                allData[i] = new Object[columnNames.length];
                allData[i][0] = cit.getSubjectID();
                allData[i][1] = cit.getDescription();
                allData[i][2] = cit.getSubjectName();
            }
            DefaultTableModel dtm = new DefaultTableModel(allData, columnNames);
            jtSubjectInfo.setModel(dtm);
        }
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtSubjectInfo = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("View Subject Info");

        jtSubjectInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtSubjectInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtSubjectInfoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtSubjectInfo);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtSubjectInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtSubjectInfoMouseClicked
         //if(evt.getButton()== MouseEvent.BUTTON3){
        if (SwingUtilities.isRightMouseButton(evt)) {
            //System.out.println(" Right Button is Clicked ");
            int idx = jtSubjectInfo.rowAtPoint(evt.getPoint());
            jtSubjectInfo.getSelectionModel().setSelectionInterval(idx, idx);
            row = jtSubjectInfo.getSelectedRow();
            //System.out.println(row);
            jpopup.show(jtSubjectInfo, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jtSubjectInfoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtSubjectInfo;
    // End of variables declaration//GEN-END:variables
}
          
