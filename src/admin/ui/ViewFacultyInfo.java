/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package admin.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import javax.swing.JDesktopPane;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.dao.FacultyInfoDAO;
import model.to.FacultyInfoTO;

/**
 *
 * @author vijay
 */
public class ViewFacultyInfo extends javax.swing.JInternalFrame {

    ArrayList<FacultyInfoTO> allFacultyData;
     JPopupMenu jpopup;
     int row;
    
    public ViewFacultyInfo() {
        initComponents();
         setSize(500, 500);
         bindTableData();
         jpopup = new JPopupMenu();
         JMenuItem jmiUpdate = new JMenuItem("Update This Record");
         jpopup.add(jmiUpdate);
         JMenuItem jmiDelete = new JMenuItem("Delete This Record");
         jpopup.add(jmiDelete);
            
            jmiDelete.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                deleteRecord();
            }
        });
            jmiUpdate.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                updateRecord();
            }
        });
    }
    
    
    private void updateRecord(){
         if (row != -1) {
            FacultyInfoTO cit = allFacultyData.get(row);
            if (cit != null) {
                AddFacultyInfo obj = new AddFacultyInfo(cit);
                obj.setVisible(true);
                obj.setTitle("Update Faculty Info");
                JDesktopPane jdp = getDesktopPane();
                jdp.add(obj);
                try {
                    obj.setSelected(true);
                } catch (PropertyVetoException ex) {
                }
                dispose();
            }
        }
    }
    
    
    private void deleteRecord(){
        String message = "";
         if (row != -1) {
            FacultyInfoTO cit = allFacultyData.get(row);
            if (cit != null) {
                int result = JOptionPane.showConfirmDialog(this, "Are You Sure To Delete This Subject Information?", "Message From Admin", JOptionPane.OK_CANCEL_OPTION);
                if (result == JOptionPane.OK_OPTION) {
                    FacultyInfoDAO action = new FacultyInfoDAO();
                    if (action.deleteRecord(cit.getFacultyID())) {
                        JOptionPane.showMessageDialog(this, "Record is Deleted");
                        bindTableData();
                        row = -1;
                    } else {
                        JOptionPane.showMessageDialog(this, "HEY USER THIS RECORD WILL NOT BE DELETED AS IT IS ALREADY IN USE SO FIRST"
                                + " DELETE THE RECORD FROM FACULTY SUBJECT TABLE");
                        //JOptionPane.showMessageDialog(this, action.geterrorMessage());
                    }
                }
            }
        }
    }
    
     private void bindTableData() {
          allFacultyData = new FacultyInfoDAO().getAllRecord();
          if (allFacultyData != null && allFacultyData.size() != 0) {
            int totalRows = allFacultyData.size();
            String[] columnNames = {" Faculty ID ", " FacultyName ", " EmailID "};
            Object allData[][] = new Object[totalRows][columnNames.length];
            for (int i = 0; i < totalRows; i++) {
                FacultyInfoTO cit = allFacultyData.get(i);
                allData[i] = new Object[columnNames.length];
                allData[i][0] = cit.getFacultyID();
                allData[i][1] = cit.getFacultyName();
                allData[i][2] = cit.getEmailID();
            }
            DefaultTableModel dtm = new DefaultTableModel(allData, columnNames);
            jtFacultyInfo.setModel(dtm);
        }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtFacultyInfo = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("View Faculty Info");

        jtFacultyInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtFacultyInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtFacultyInfoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtFacultyInfo);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtFacultyInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtFacultyInfoMouseClicked
        //if(evt.getButton()== MouseEvent.BUTTON3){
        if (SwingUtilities.isRightMouseButton(evt)) {
            //System.out.println(" Right Button is Clicked ");
            int idx = jtFacultyInfo.rowAtPoint(evt.getPoint());
            jtFacultyInfo.getSelectionModel().setSelectionInterval(idx, idx);
            row = jtFacultyInfo.getSelectedRow();
            //System.out.println(row);
            jpopup.show(jtFacultyInfo, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jtFacultyInfoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtFacultyInfo;
    // End of variables declaration//GEN-END:variables
}
