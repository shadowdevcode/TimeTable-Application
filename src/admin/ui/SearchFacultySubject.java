/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin.ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.dao.FacultyInfoDAO;
import model.dao.FacultySubjectDAO;
import model.dao.SubjectInfoDAO;
import model.to.FacultyInfoTO;
import model.to.FacultySubjectTO;
import model.to.SubjectInfoTO;

/**
 *
 * @author vijay
 */
public class SearchFacultySubject extends javax.swing.JInternalFrame {

    /**
     * Creates new form SearchFacultySubject
     */
    public SearchFacultySubject() {
        initComponents();
        setSize(916, 550);
        jcbFacultyID2.removeAllItems();
        jcbFacultyID2.addItem("Select A Faculty");
        ArrayList<FacultyInfoTO> allfacultyData = new FacultyInfoDAO().getAllRecord();
        if (allfacultyData != null) {
            for (FacultyInfoTO fit : allfacultyData) {
                jcbFacultyID2.addItem(fit);
            }
        }

        jcbSubjectID.removeAllItems();
        jcbSubjectID.addItem("Select A Subject");
        ArrayList<SubjectInfoTO> allsubjectdata = new SubjectInfoDAO().getAllRecord();
        if (allsubjectdata != null) {
            for (SubjectInfoTO sit : allsubjectdata) {
                jcbSubjectID.addItem(sit);
            }
        }

        jcbYesOrNo.removeAllItems();
        jcbYesOrNo.addItem("Select Yes Or No");
        jcbYesOrNo.addItem("YES");
        jcbYesOrNo.addItem("NO");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtFacultySubjectInfo = new javax.swing.JTable();
        jcbYesOrNo = new javax.swing.JComboBox();
        btnShowFaculty = new javax.swing.JButton();
        jcbSubjectID = new javax.swing.JComboBox();
        jcbFacultyID2 = new javax.swing.JComboBox();
        btnYesorNo = new javax.swing.JButton();
        btnShowSubject = new javax.swing.JButton();

        setBackground(java.awt.SystemColor.activeCaptionBorder);
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Search Faculty Subject");
        getContentPane().setLayout(null);

        jtFacultySubjectInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtFacultySubjectInfo);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 210, 900, 310);

        jcbYesOrNo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jcbYesOrNo);
        jcbYesOrNo.setBounds(10, 140, 370, 30);

        btnShowFaculty.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        btnShowFaculty.setText("Show Faculty Info");
        btnShowFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowFacultyActionPerformed(evt);
            }
        });
        getContentPane().add(btnShowFaculty);
        btnShowFaculty.setBounds(470, 10, 290, 40);

        jcbSubjectID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jcbSubjectID);
        jcbSubjectID.setBounds(10, 70, 370, 30);

        jcbFacultyID2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jcbFacultyID2);
        jcbFacultyID2.setBounds(10, 10, 370, 30);

        btnYesorNo.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        btnYesorNo.setText("Show Yes/No Info");
        btnYesorNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesorNoActionPerformed(evt);
            }
        });
        getContentPane().add(btnYesorNo);
        btnYesorNo.setBounds(470, 130, 290, 40);

        btnShowSubject.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        btnShowSubject.setText("Show Subject Info");
        btnShowSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowSubjectActionPerformed(evt);
            }
        });
        getContentPane().add(btnShowSubject);
        btnShowSubject.setBounds(470, 70, 290, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowFacultyActionPerformed
        try {
            if (jcbFacultyID2.getSelectedItem() instanceof FacultyInfoTO) {

                FacultyInfoTO fit = (FacultyInfoTO) jcbFacultyID2.getSelectedItem();
                ArrayList<FacultySubjectTO> allFacultySubjectdata = new FacultySubjectDAO().getAllRecord(fit.getFacultyID());
                if (allFacultySubjectdata != null && allFacultySubjectdata.size() != 0) {
                    int totalRows = allFacultySubjectdata.size();
                    String[] columnNames = {" Faculty Name ", " Subject Name ", " IsCurrent "};
                    Object allData[][] = new Object[totalRows][columnNames.length];
                    for (int i = 0; i < totalRows; i++) {
                        FacultySubjectTO fst = allFacultySubjectdata.get(i);
                        allData[i] = new Object[columnNames.length];
                        allData[i][0] = fst.getFacultyName();
                        allData[i][1] = fst.getSubjectName();
                        allData[i][2] = fst.getIsCurrent();
                    }
                    DefaultTableModel dtm = new DefaultTableModel(allData, columnNames);
                    jtFacultySubjectInfo.setModel(dtm);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Please Select A Faculty");
            }

        } catch (Exception ex) {

        }
    }//GEN-LAST:event_btnShowFacultyActionPerformed

    private void btnShowSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowSubjectActionPerformed
        try {
            if (jcbSubjectID.getSelectedItem() instanceof SubjectInfoTO) {

                SubjectInfoTO sit = (SubjectInfoTO) jcbSubjectID.getSelectedItem();
                ArrayList<FacultySubjectTO> allFacultySubjectdata = new FacultySubjectDAO().getAllRecord1(sit.getSubjectID());
                if (allFacultySubjectdata != null && allFacultySubjectdata.size() != 0) {
                    int totalRows = allFacultySubjectdata.size();
                    String[] columnNames = {" Faculty Name ", " Subject Name ", " IsCurrent "};
                    Object allData[][] = new Object[totalRows][columnNames.length];
                    for (int i = 0; i < totalRows; i++) {
                        FacultySubjectTO fst = allFacultySubjectdata.get(i);
                        allData[i] = new Object[columnNames.length];
                        allData[i][0] = fst.getFacultyName();
                        allData[i][1] = fst.getSubjectName();
                        allData[i][2] = fst.getIsCurrent();
                    }
                    DefaultTableModel dtm = new DefaultTableModel(allData, columnNames);
                    jtFacultySubjectInfo.setModel(dtm);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Please Select A Subject");
            }

        } catch (Exception ex) {

        }
    }//GEN-LAST:event_btnShowSubjectActionPerformed

    private void btnYesorNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesorNoActionPerformed
        String message = "";
        try {
            if (jcbYesOrNo.getSelectedItem().toString().contains("Select")) {
                JOptionPane.showMessageDialog(this, "Please Select Either Yes Or No");

            } else {
                String value = jcbYesOrNo.getSelectedItem().toString();

                ArrayList<FacultySubjectTO> allFacultySubjectdata = new FacultySubjectDAO().getAllRecord2(value);
                if (allFacultySubjectdata != null && allFacultySubjectdata.size() != 0) {
                    int totalRows = allFacultySubjectdata.size();
                    String[] columnNames = {" Faculty Name ", " Subject Name ", " IsCurrent "};
                    Object allData[][] = new Object[totalRows][columnNames.length];
                    for (int i = 0; i < totalRows; i++) {
                        FacultySubjectTO fst = allFacultySubjectdata.get(i);
                        allData[i] = new Object[columnNames.length];
                        allData[i][0] = fst.getFacultyName();
                        allData[i][1] = fst.getSubjectName();
                        allData[i][2] = fst.getIsCurrent();
                    }
                    DefaultTableModel dtm = new DefaultTableModel(allData, columnNames);
                    jtFacultySubjectInfo.setModel(dtm);

                } else {
                    message = "There is No Record";
                    String[] columnNames = {" Faculty Name ", " Subject Name ", " IsCurrent "};
                    Object allData[][] = new Object[1][columnNames.length];
                    allData[0] = new Object[columnNames.length];
                    allData[0][0] = "No Data";
                    allData[0][1] = "No Data";
                    allData[0][2] = "No Data";
                    DefaultTableModel dtm = new DefaultTableModel(allData, columnNames);
                    jtFacultySubjectInfo.setModel(dtm);

                    JOptionPane.showMessageDialog(this, message);
                }
            }
        } catch (Exception ex) {
            message = ex.getMessage();

        }

    }//GEN-LAST:event_btnYesorNoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnShowFaculty;
    private javax.swing.JButton btnShowSubject;
    private javax.swing.JButton btnYesorNo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcbFacultyID2;
    private javax.swing.JComboBox jcbSubjectID;
    private javax.swing.JComboBox jcbYesOrNo;
    private javax.swing.JTable jtFacultySubjectInfo;
    // End of variables declaration//GEN-END:variables
}
